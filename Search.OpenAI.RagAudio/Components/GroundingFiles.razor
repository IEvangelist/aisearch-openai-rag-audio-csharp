<div class="rounded-lg border bg-card text-card-foreground shadow-sm @(string.Join(" ", Classes ?? []))">
    <!-- card header -->
    <div class="flex flex-col space-y-1.5 p-6">
        <!-- card title -->
        <div class="text-2xl font-semibold leading-none tracking-tight">
            Grounding Files
        </div>
        <!-- card description -->
        <div class="text-sm text-muted-foreground">
            Files used to ground the answers.
        </div>
    </div>

    <!-- card content -->
    <div class="p-6 pt-0">
        <div class="flex flex-wrap gap-2">
            @foreach (var file in Files)
            {
                <button class="h-9 rounded-full px-3 inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 px-4 py-2 rounded-md border border-input bg-background hover:bg-accent hover:text-accent-foreground"
                        aria-label="View @(file.Name)"
                        @onclick="@(async () => await OnSelected.InvokeAsync(file))">
                    <img src="/lucide/file.svg" />
                    @file.Name
                </button>
            }
        </div>
    </div>

</div>

@code {
    [Parameter]
    public string[]? Classes { get; set; }

    [Parameter, EditorRequired]
    public required GroundingFile[] Files { get; set; } = [];

    [Parameter, EditorRequired]
    public required EventCallback<GroundingFile> OnSelected { get; set; }
}
