@page "/"

<PageTitle>Azure OpenAI: Realtime Audio RAG</PageTitle>

<div class="flex h-dvh flex-col">
    <main class="flex flex-grow flex-col items-center justify-center">
        <h1
        class="mb-8 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-4xl font-bold text-transparent pointer-events-none focus-visible:outline-none md:text-7xl">
            Talk to your data
        </h1>
        <div class="mb-4 flex flex-col items-center justify-center">
            <div>
                <button
                class="h-12 w-60 inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 px-4 py-2 rounded-md text-primary-foreground @(_isListening ? "bg-red-600 hover:bg-red-700" : "bg-purple-500 hover:bg-purple-600")"
                aria-label="@(_isListening ? "Stop recording" : "Start recording")"
                @onclick="@(async () => await OnToggleListeningAsync())">
                    @if (_isListening)
                    {
                        <img src="lucide/mic-off.svg" class="mr-2 h-6 w-6 text-current" />
                        <span>Stop conversation</span>
                    }
                    else
                    {
                        <img src="lucide/mic.svg" class="mr-2 h-6 w-6 text-current" />
                    }
                </button>

            </div>

            <StatusMessage IsListening="@_isListening" />
        </div>
        <GroundingFiles Files=@(_groundingFiles) OnSelected=@(file => _selectedFile = file) />
    </main>

    <Microphone @ref="_microphone" OnMicrophoneAvailable=@OnMicrophoneAvailable />
    <Speaker @ref="_speaker" />

    <div style="display: none">
        @foreach (var transcript in _transcript)
        {
            <p>@transcript</p>
        }
    </div>

    <footer class="py-4 text-center">
        @{
            var (text, color) = _status switch
            {
                RealtimeStatus.Error => ("Error!", Badge.BadgeColor.Error),
                RealtimeStatus.Conversating => ("Conversating...", Badge.BadgeColor.Success),
                _ => ("Standing by...", Badge.BadgeColor.Default)
            };
        }
        <Badge Text="@text" Color="@color" />
        <p class="py-2">Built with Azure AI Search + Azure OpenAI</p>
    </footer>

    @if (_selectedFile is not null)
    {
        <GroundingFileView File=@(_selectedFile) OnClosed=@(file => _selectedFile = null) />
    }
</div>