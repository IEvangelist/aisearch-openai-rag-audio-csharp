@page "/"

<PageTitle>Azure OpenAI: Realtime Audio RAG</PageTitle>

<div class="flex h-dvh flex-col">
    <main class="flex flex-grow flex-col items-center justify-center">
        <h1
        class="mb-8 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-4xl font-bold text-transparent pointer-events-none focus-visible:outline-none md:text-7xl">
            Talk to your data
        </h1>
        <div class="mb-4 flex flex-col items-center justify-center">
            <div>
                <button
                class="h-12 w-60 inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 px-4 py-2 rounded-md text-primary-foreground @(_isListening ? "bg-red-600 hover:bg-red-700" : "bg-purple-500 hover:bg-purple-600")"
                aria-label="@(_isListening ? "Stop recording" : "Start recording")"
                @onclick="@(async () => await OnToggleListeningAsync())">
                    @if (_isListening)
                    {
                        <img src="lucide/mic-off.svg" class="mr-2 h-6 w-6 text-current" />
                        <span>Stop conversation</span>
                    }
                    else
                    {
                        <img src="lucide/mic.svg" class="mr-2 h-6 w-6 text-current" />
                    }
                </button>

            </div>

            <StatusMessage IsListening="@_isListening" />
        </div>
        <GroundingFiles Files=@(_groundingFiles) OnSelected=@(file => _selectedFile = file) />
    </main>

    <Microphone @ref="_microphone" OnMicrophoneAvailable=@OnMicrophoneAvailable />
    <Speaker @ref="_speaker" />

    <div style="display: none">
        @foreach (var transcript in _transcript)
        {
            <p>@transcript</p>
        }
    </div>

    <footer class="py-4 text-center">
        @{
            var (text, color) = _status switch
            {
                RealtimeStatus.Error => ("Error!", Badge.BadgeColor.Error),
                RealtimeStatus.Conversating => ("Conversating...", Badge.BadgeColor.Success),
                _ => ("Standing by...", Badge.BadgeColor.Default)
            };
        }
        <Badge Text="@text" Color="@color">
            <IconContent>
                @if (_status is RealtimeStatus.Error)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" 
                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-circle-x h-4 w-4 !stroke-slate-800 dark:!stroke-white">
                        <circle cx="12" cy="12" r="10"/>
                        <path d="m15 9-6 6"/>
                        <path d="m9 9 6 6"/>
                    </svg>
                }
                else if (_status is RealtimeStatus.Conversating)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" 
                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-sparkles h-4 w-4 !stroke-slate-800 dark:!stroke-white">
                         <path d="M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z" />
                         <path d="M20 3v4" />
                         <path d="M22 5h-4" />
                         <path d="M4 17v2" />
                         <path d="M5 18H3" />
                    </svg>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-audio-lines h-4 w-4 !stroke-slate-800 dark:!stroke-white">
                        <path d="M2 10v3" />
                        <path d="M6 6v11" />
                        <path d="M10 3v18" />
                        <path d="M14 8v7" />
                        <path d="M18 5v13" />
                        <path d="M22 10v3" />
                    </svg>
                }
            </IconContent>
        </Badge>
        <p class="py-2">Built with Azure AI Search + Azure OpenAI</p>
    </footer>

    @if (_selectedFile is not null)
    {
        <GroundingFileView File=@(_selectedFile) OnClosed=@(file => _selectedFile = null) />
    }
</div>